// generated by sv2v
module unit_average (
	in,
	out
);
	parameter N = 16;
	input wire [(N * 16) - 1:0] in;
	output wire [15:0] out;
	reg [31:0] sum;
	function [31:0] frac_unsigned_div_int;
		input reg [31:0] x;
		input reg signed [31:0] y;
		frac_unsigned_div_int = $unsigned(x) / y;
	endfunction
	function [15:0] unsigned_frac_to_unit_overflow_as_max;
		input reg [31:0] x;
		unsigned_frac_to_unit_overflow_as_max = (x[31:16] == 0 ? x[15:0] : 16'hffff);
	endfunction
	assign out = unsigned_frac_to_unit_overflow_as_max(frac_unsigned_div_int(sum, N));
	function [31:0] frac_add;
		input reg [31:0] x;
		input reg [31:0] y;
		frac_add = x + y;
	endfunction
	function [31:0] unit_to_frac;
		input reg [15:0] x;
		unit_to_frac = {16'b0000000000000000, x};
	endfunction
	always @(*) begin
		sum = 32'b00000000000000000000000000000000;
		begin : sv2v_autoblock_1
			integer i;
			for (i = N - 1; i >= 0; i = i - 1)
				sum = frac_add(sum, unit_to_frac(in[i * 16+:16]));
		end
	end
endmodule
